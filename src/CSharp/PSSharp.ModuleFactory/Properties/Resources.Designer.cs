//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PSSharp.ModuleFactory.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PSSharp.ModuleFactory.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path is expected to resolve to a single path but the the provided value matched multiple paths..
        /// </summary>
        internal static string AmbiguousPath {
            get {
                return ResourceManager.GetString("AmbiguousPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path &apos;{0}&apos; is expected to resolve to a single path but the provided value matched multple paths..
        /// </summary>
        internal static string AmbiguousPathInterpolated {
            get {
                return ResourceManager.GetString("AmbiguousPathInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided template name is ambiguous. More than one templates matched the provided value..
        /// </summary>
        internal static string AmbiguousTemplateName {
            get {
                return ResourceManager.GetString("AmbiguousTemplateName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided template name is ambiguous. More than one templates matched the provided value &apos;{0}&apos;..
        /// </summary>
        internal static string AmbiguousTemplateNameInterpolated {
            get {
                return ResourceManager.GetString("AmbiguousTemplateNameInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The module configuration for the module specified does not exist..
        /// </summary>
        internal static string BuildConfigurationNotFound {
            get {
                return ResourceManager.GetString("BuildConfigurationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The module configuration &apos;{0}&apos; for the module &apos;{1}&apos; does not exist..
        /// </summary>
        internal static string BuildConfigurationNotFoundInterpolated {
            get {
                return ResourceManager.GetString("BuildConfigurationNotFoundInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The module with the name specified does not have any build configurations defined..
        /// </summary>
        internal static string BuildModuleNotFound {
            get {
                return ResourceManager.GetString("BuildModuleNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The module with the name &apos;{0}&apos; does not have any build configurations defined..
        /// </summary>
        internal static string BuildModuleNotFoundInterpolated {
            get {
                return ResourceManager.GetString("BuildModuleNotFoundInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;using module {0}&apos; directive from file &apos;{1}&apos; is being ignored because the target file is being included in the generated script module.
        /// </summary>
        internal static string BuildScriptModuleDebugIgnoredUsingModule {
            get {
                return ResourceManager.GetString("BuildScriptModuleDebugIgnoredUsingModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading script file &apos;{0}&apos;..
        /// </summary>
        internal static string BuildScriptModuleDebugReadingFile {
            get {
                return ResourceManager.GetString("BuildScriptModuleDebugReadingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifying script requirements..
        /// </summary>
        internal static string BuildScriptModuleDebugScriptRequirements {
            get {
                return ResourceManager.GetString("BuildScriptModuleDebugScriptRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The script module &apos;{0}&apos; will not be built because one or more errors were identified which may cause the script module to contain unexpected content..
        /// </summary>
        internal static string BuildScriptModuleVerboseHadErrorsInterpolated {
            get {
                return ResourceManager.GetString("BuildScriptModuleVerboseHadErrorsInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No source files were identified for the script module..
        /// </summary>
        internal static string BuildScriptModuleWarningNoFiles {
            get {
                return ResourceManager.GetString("BuildScriptModuleWarningNoFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The script module &apos;{0}&apos; is up to date. Use the -Force parameter to re-generate the module anyway..
        /// </summary>
        internal static string BuildScriptModuleWarningUpToDate {
            get {
                return ResourceManager.GetString("BuildScriptModuleWarningUpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following changes were identified between the two module fingerprints: {0}..
        /// </summary>
        internal static string CompareModuleFingerprintInformation {
            get {
                return ResourceManager.GetString("CompareModuleFingerprintInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application id defined in the requirements of the script file does not match the application id required by another script file provided..
        /// </summary>
        internal static string ConflictingApplicationIdRequirement {
            get {
                return ResourceManager.GetString("ConflictingApplicationIdRequirement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application id defined in the requirements of the script file &apos;{0}&apos; does not match the application id required by another script file provided..
        /// </summary>
        internal static string ConflictingApplicationIdRequirementInterpolated {
            get {
                return ResourceManager.GetString("ConflictingApplicationIdRequirementInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a matching application id in the requirements for the script files, or build the files into separate modules..
        /// </summary>
        internal static string ConflictingApplicationIdRequirementRecommendedAction {
            get {
                return ResourceManager.GetString("ConflictingApplicationIdRequirementRecommendedAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PSEdition(s) defined in the requirements of the script file does not match the PSEdition(s) required by another script file provided..
        /// </summary>
        internal static string ConflictingPSEditionRequirement {
            get {
                return ResourceManager.GetString("ConflictingPSEditionRequirement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PSEdition(s) defined in the requirements of the script &apos;{0}&apos; file does not match the PSEdition(s) required by another script file provided..
        /// </summary>
        internal static string ConflictingPSEditionRequirementInterpolated {
            get {
                return ResourceManager.GetString("ConflictingPSEditionRequirementInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the same PSEdition requirements in the script files, or build the files into separate script modules..
        /// </summary>
        internal static string ConflictingPSEditionRequirementRecommendedAction {
            get {
                return ResourceManager.GetString("ConflictingPSEditionRequirementRecommendedAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The contents of the data file cannot be converted to the expected type..
        /// </summary>
        internal static string DataFileCastError {
            get {
                return ResourceManager.GetString("DataFileCastError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The contents of the data file &apos;{0}&apos; cannot be converted to the expected type &apos;{1}&apos;..
        /// </summary>
        internal static string DataFileCastErrorInterpolated {
            get {
                return ResourceManager.GetString("DataFileCastErrorInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The contents of the data file are invalid. The file must contain a hashtable or an array of hashtables..
        /// </summary>
        internal static string DataFileContentsInvalid {
            get {
                return ResourceManager.GetString("DataFileContentsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The contents of the data file at path &apos;{0}&apos; are invalid. The file must contain a hashtable or an array of hashtables..
        /// </summary>
        internal static string DataFileContentsInvalidInterpolated {
            get {
                return ResourceManager.GetString("DataFileContentsInvalidInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path must indicate a location on the file system. The provided value resolved to a path that does not exist on the FileSystemProvider..
        /// </summary>
        internal static string ExpectedFileSystemPath {
            get {
                return ResourceManager.GetString("ExpectedFileSystemPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path must indicate a location on the file system. The provided value &apos;{0}&apos; resolved to a path that does not exist on the FileSystemProvider..
        /// </summary>
        internal static string ExpectedFileSystemPathInterpolated {
            get {
                return ResourceManager.GetString("ExpectedFileSystemPathInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A file at the destination path already exists..
        /// </summary>
        internal static string FileExists {
            get {
                return ResourceManager.GetString("FileExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A file at the destination path &apos;{0}&apos; already exists..
        /// </summary>
        internal static string FileExistsInterpolated {
            get {
                return ResourceManager.GetString("FileExistsInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No file exists at the expected path..
        /// </summary>
        internal static string FileNotFound {
            get {
                return ResourceManager.GetString("FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No file exists at the expected path &apos;{0}&apos;..
        /// </summary>
        internal static string FileNotFoundInterpolated {
            get {
                return ResourceManager.GetString("FileNotFoundInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The generated script module file is invalid; the content cannot be parsed as a PowerShell script file. See the inner exception for specific errors..
        /// </summary>
        internal static string GeneratedInvalidScript {
            get {
                return ResourceManager.GetString("GeneratedInvalidScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File a new issue in the github repository for the PSSharp.ModuleFactory module with as much informaton as possible about the source and content of the invalid script..
        /// </summary>
        internal static string GeneratedInvalidScriptRecommendedAction {
            get {
                return ResourceManager.GetString("GeneratedInvalidScriptRecommendedAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path that the resulting script module (&apos;.psm1&apos; file) will be created at..
        /// </summary>
        internal static string HelpMessageBuildScriptModuleDestinationPath {
            get {
                return ResourceManager.GetString("HelpMessageBuildScriptModuleDestinationPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to one or more script files to be compiled into a script module. This parameter does not support wildcards..
        /// </summary>
        internal static string HelpMessageBuildScriptModuleLiteralPath {
            get {
                return ResourceManager.GetString("HelpMessageBuildScriptModuleLiteralPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to one or more script files to be compiled into a script module. This parameter supports wildcards..
        /// </summary>
        internal static string HelpMessageBuildScriptModulePath {
            get {
                return ResourceManager.GetString("HelpMessageBuildScriptModulePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A current fingerprint of the module to compare, which may include new changes. If the value represents a file path representing a serialized module fingerprint, the fingerprint will be loaded from the file..
        /// </summary>
        internal static string HelpMessageCompareModuleFingerprintCurrent {
            get {
                return ResourceManager.GetString("HelpMessageCompareModuleFingerprintCurrent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The previous fingerprint from the module to be compared against. If the value represents a file path representing a serialized module fingerprint, the fingerprint will be loaded from the file..
        /// </summary>
        internal static string HelpMessageCompareModuleFingerprintInitial {
            get {
                return ResourceManager.GetString("HelpMessageCompareModuleFingerprintInitial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The destination file cannot be included in the source files provided to build the module..
        /// </summary>
        internal static string IncludeSourceFileInDestination {
            get {
                return ResourceManager.GetString("IncludeSourceFileInDestination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The destination file &apos;{0}&apos; cannot be included in the source files provided to build the module..
        /// </summary>
        internal static string IncludeSourceFileInDestinationInterpolated {
            get {
                return ResourceManager.GetString("IncludeSourceFileInDestinationInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter the source files to exclude the destination path. This can be done by piping results from Get-ChildItem -Exclude $DestinationPath into the {0} command..
        /// </summary>
        internal static string IncludeSourceFileInDestionationRecommendedAction {
            get {
                return ResourceManager.GetString("IncludeSourceFileInDestionationRecommendedAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The member &apos;{0}&apos; must be convertable to type &apos;{1}&apos;..
        /// </summary>
        internal static string MemberTypeInvalid {
            get {
                return ResourceManager.GetString("MemberTypeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Module Fingerprint : {0} combinatorials of {1} commands..
        /// </summary>
        internal static string ModuleFingerprintToString {
            get {
                return ResourceManager.GetString("ModuleFingerprintToString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The module is not imported into the current PowerShell session..
        /// </summary>
        internal static string ModuleNotImported {
            get {
                return ResourceManager.GetString("ModuleNotImported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The module &apos;{0}&apos; is not imported into the current PowerShell session..
        /// </summary>
        internal static string ModuleNotImportedInterpolated {
            get {
                return ResourceManager.GetString("ModuleNotImportedInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import the module into the PowerShell session and try again..
        /// </summary>
        internal static string ModuleNotImportedRecommendedAction {
            get {
                return ResourceManager.GetString("ModuleNotImportedRecommendedAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The template data is invalid. View the exception for more information..
        /// </summary>
        internal static string ModuleTemplateValidationException {
            get {
                return ResourceManager.GetString("ModuleTemplateValidationException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one script file included a script-level dynamic param block definition. Only one script may define a script-level dynamic param block definition which will be used for the generated module. Build the scripts into separate files or remove the dynamic param block from one of the files..
        /// </summary>
        internal static string MultipleDynamicParamBlocksDefined {
            get {
                return ResourceManager.GetString("MultipleDynamicParamBlocksDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one script file included a script-level param block definition. Only one script may define a script-level param block definition which will be used for the generated module. Build the scripts into separate files or remove the param block from one of the files..
        /// </summary>
        internal static string MultipleParamBlocksDefined {
            get {
                return ResourceManager.GetString("MultipleParamBlocksDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The module cannot be built because the nested module definition does not define a valid name..
        /// </summary>
        internal static string NestedModuleNameRequired {
            get {
                return ResourceManager.GetString("NestedModuleNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The module &apos;{0}&apos; (configuration &apos;{1}&apos;) cannot be built because the nested module definition at index {2} does not define a valid name..
        /// </summary>
        internal static string NestedModuleNameRequiredInterpolated {
            get {
                return ResourceManager.GetString("NestedModuleNameRequiredInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating directory &apos;{0}&apos;.
        /// </summary>
        internal static string NewModuleProjectCreateDirectory {
            get {
                return ResourceManager.GetString("NewModuleProjectCreateDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating file &apos;{0}&apos;..
        /// </summary>
        internal static string NewModuleProjectCreateFile {
            get {
                return ResourceManager.GetString("NewModuleProjectCreateFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating file &apos;{0}&apos; from template. Interpolating variables in file content: {1}..
        /// </summary>
        internal static string NewModuleProjectCreateFileFromTemplate {
            get {
                return ResourceManager.GetString("NewModuleProjectCreateFileFromTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing post-template creation command &apos;{0}&apos;..
        /// </summary>
        internal static string NewModuleProjectExecutingCommand {
            get {
                return ResourceManager.GetString("NewModuleProjectExecutingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter set &apos;{0}&apos; not implemented. If you experience this error with a production version of the module, please contact the module developer..
        /// </summary>
        internal static string ParameterSetNotImplemented {
            get {
                return ResourceManager.GetString("ParameterSetNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expression or file could not be parsed..
        /// </summary>
        internal static string ParseError {
            get {
                return ResourceManager.GetString("ParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expression or file &apos;{0}&apos; could not be parsed..
        /// </summary>
        internal static string ParseErrorInterpolated {
            get {
                return ResourceManager.GetString("ParseErrorInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The repository already contains a template with a matching template id..
        /// </summary>
        internal static string RepositoryTemplateIdConflict {
            get {
                return ResourceManager.GetString("RepositoryTemplateIdConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The repository already contains a template with a matching template id &apos;{0}&apos;..
        /// </summary>
        internal static string RepositoryTemplateIdConflictInterpolated {
            get {
                return ResourceManager.GetString("RepositoryTemplateIdConflictInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The template must have a name..
        /// </summary>
        internal static string RepositoryTemplateNameRequired {
            get {
                return ResourceManager.GetString("RepositoryTemplateNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The member is required..
        /// </summary>
        internal static string RequiredMember {
            get {
                return ResourceManager.GetString("RequiredMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The member &apos;{0}&apos; is required..
        /// </summary>
        internal static string RequiredMemberInterpolated {
            get {
                return ResourceManager.GetString("RequiredMemberInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ScriptBlock ast must be from a file for the attempted operation..
        /// </summary>
        internal static string ScriptBlockAstNotFromFile {
            get {
                return ResourceManager.GetString("ScriptBlockAstNotFromFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A script module &apos;.psm1&apos; file cannot contain a Begin block. The source file contains a Begin clause..
        /// </summary>
        internal static string ScriptModuleBeginBlock {
            get {
                return ResourceManager.GetString("ScriptModuleBeginBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A script module &apos;.psm1&apos; file cannot contain a Begin block. The source file &apos;{0}&apos; contains a Begin clause..
        /// </summary>
        internal static string ScriptModuleBeginBlockInterpolated {
            get {
                return ResourceManager.GetString("ScriptModuleBeginBlockInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A script module &apos;.psm1&apos; file cannot contain both a Process block and an End block. The source file identified a Process or End clause after a clause of the opposite type was identified..
        /// </summary>
        internal static string ScriptModuleSingleClause {
            get {
                return ResourceManager.GetString("ScriptModuleSingleClause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A script module &apos;.psm1&apos; file cannot contain both a Process block and an End block. The source file &apos;{0}&apos; identified a {1} clause after a clause of the opposite type was identified..
        /// </summary>
        internal static string ScriptModuleSingleClauseInterpolated {
            get {
                return ResourceManager.GetString("ScriptModuleSingleClauseInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All script logic must be in the Process or End blocks of a script file. In addition, the script module cannot contain both a Process and an End block. Consider storing all script logic in the End block of the source file(s)..
        /// </summary>
        internal static string ScriptModuleSingleClauseRecommendedAction {
            get {
                return ResourceManager.GetString("ScriptModuleSingleClauseRecommendedAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Creating a directory at path &apos;{0}..
        /// </summary>
        internal static string ShouldProcessAndCreateDirectoryDescription {
            get {
                return ResourceManager.GetString("ShouldProcessAndCreateDirectoryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///This operation will also create a directory at path &apos;{0}&apos;..
        /// </summary>
        internal static string ShouldProcessAndCreateDirectoryWarning {
            get {
                return ResourceManager.GetString("ShouldProcessAndCreateDirectoryWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build script module.
        /// </summary>
        internal static string ShouldProcessBuildScriptModuleAction {
            get {
                return ResourceManager.GetString("ShouldProcessBuildScriptModuleAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Building script module at path &apos;{0}&apos; from {1} script files..
        /// </summary>
        internal static string ShouldProcessBuildScriptModuleDescription {
            get {
                return ResourceManager.GetString("ShouldProcessBuildScriptModuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build script module at path &apos;{0}&apos; from {1} script files?.
        /// </summary>
        internal static string ShouldProcessBuildScriptModuleWarning {
            get {
                return ResourceManager.GetString("ShouldProcessBuildScriptModuleWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export module fingerprint.
        /// </summary>
        internal static string ShouldProcessExportModuleFingerprintAction {
            get {
                return ResourceManager.GetString("ShouldProcessExportModuleFingerprintAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exporting module fingerprint json to path &apos;{0}&apos;..
        /// </summary>
        internal static string ShouldProcessExportModuleFingerprintDescription {
            get {
                return ResourceManager.GetString("ShouldProcessExportModuleFingerprintDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export module fingerprint json to path &apos;{0}&apos;?.
        /// </summary>
        internal static string ShouldProcessExportModuleFingerprintWarning {
            get {
                return ResourceManager.GetString("ShouldProcessExportModuleFingerprintWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create new module project from template.
        /// </summary>
        internal static string ShouldProcessNewModuleProjectAction {
            get {
                return ResourceManager.GetString("ShouldProcessNewModuleProjectAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a new module project at path &apos;{0}&apos; from the template &apos;{1}&apos;..
        /// </summary>
        internal static string ShouldProcessNewModuleProjectDescription {
            get {
                return ResourceManager.GetString("ShouldProcessNewModuleProjectDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a new module project at path &apos;{0}&apos; from the template &apos;{1}&apos;?.
        /// </summary>
        internal static string ShouldProcessNewModuleProjectWarning {
            get {
                return ResourceManager.GetString("ShouldProcessNewModuleProjectWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a new module template &apos;{0} ({1})&apos; from path &apos;{2}&apos;..
        /// </summary>
        internal static string ShouldProcessNewModuleTemplateDescription {
            get {
                return ResourceManager.GetString("ShouldProcessNewModuleTemplateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a new module template &apos;{0} ({1})&apos; from path &apos;{2}&apos;?.
        /// </summary>
        internal static string ShouldProcessNewModuleTemplateWarning {
            get {
                return ResourceManager.GetString("ShouldProcessNewModuleTemplateWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add existing module template.
        /// </summary>
        internal static string ShouldProcessRegisterModuleTemplateAction {
            get {
                return ResourceManager.GetString("ShouldProcessRegisterModuleTemplateAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding existing module template &apos;{0}&apos; with tempalte id &apos;{1}&apos;..
        /// </summary>
        internal static string ShouldProcessRegisterModuleTemplateDescription {
            get {
                return ResourceManager.GetString("ShouldProcessRegisterModuleTemplateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add existing module template &apos;{0} with template id &apos;{1}&apos;?.
        /// </summary>
        internal static string ShouldProcessRegisterModuleTemplateWarning {
            get {
                return ResourceManager.GetString("ShouldProcessRegisterModuleTemplateWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing module &apos;{0}&apos; with id {1}..
        /// </summary>
        internal static string ShouldProcessRemoveModuleTemplateDescription {
            get {
                return ResourceManager.GetString("ShouldProcessRemoveModuleTemplateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove module &apos;{0}&apos; with id {1}..
        /// </summary>
        internal static string ShouldProcessRemoveModuleTemplateWarning {
            get {
                return ResourceManager.GetString("ShouldProcessRemoveModuleTemplateWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace the current module template repository.
        /// </summary>
        internal static string ShouldProcessSetModuleTemplateRepositoryAction {
            get {
                return ResourceManager.GetString("ShouldProcessSetModuleTemplateRepositoryAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using the module template repository &apos;{0}&apos; (current repository: {1})..
        /// </summary>
        internal static string ShouldProcessSetModuleTemplateRepositoryDescription {
            get {
                return ResourceManager.GetString("ShouldProcessSetModuleTemplateRepositoryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the module template repository &apos;{0}&apos; (current repository: {1})?.
        /// </summary>
        internal static string ShouldProcessSetModuleTemplateRepositoryWarning {
            get {
                return ResourceManager.GetString("ShouldProcessSetModuleTemplateRepositoryWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The template directory does not contain a valid template data file. The data file must be named &quot;template.psd1&quot; and exist in the root directory of the template..
        /// </summary>
        internal static string TemplateDataFileNotFound {
            get {
                return ResourceManager.GetString("TemplateDataFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The template directory &apos;{0}&apos; does not contain a valid template file. The data file must be named &quot;template.psd1&quot; and exist in the root directory of the template..
        /// </summary>
        internal static string TemplateDataFileNotFoundInterpolated {
            get {
                return ResourceManager.GetString("TemplateDataFileNotFoundInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The template data file must define a Name property..
        /// </summary>
        internal static string TemplateNameRequired {
            get {
                return ResourceManager.GetString("TemplateNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The template data file at path &apos;{0}&apos; must define a Name property..
        /// </summary>
        internal static string TemplateNameRequiredInterpolated {
            get {
                return ResourceManager.GetString("TemplateNameRequiredInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The template does not exist..
        /// </summary>
        internal static string TemplateNotFound {
            get {
                return ResourceManager.GetString("TemplateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The template &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string TemplateNotFoundInterpolated {
            get {
                return ResourceManager.GetString("TemplateNotFoundInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A module template with the same name and version already exists..
        /// </summary>
        internal static string TemplateVersionConflict {
            get {
                return ResourceManager.GetString("TemplateVersionConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A module template with the same name &apos;{0}&apos; and version &apos;{1}&apos; already exists..
        /// </summary>
        internal static string TemplateVersionConflictInterpolated {
            get {
                return ResourceManager.GetString("TemplateVersionConflictInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the name or version of the template you are trying to create..
        /// </summary>
        internal static string TemplateVersionConflictRecommendedAction {
            get {
                return ResourceManager.GetString("TemplateVersionConflictRecommendedAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assign the property(ies) {0} to the target object..
        /// </summary>
        internal static string TooManyPropertiesInterpolated {
            get {
                return ResourceManager.GetString("TooManyPropertiesInterpolated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploading template file from path &apos;{0}&apos;..
        /// </summary>
        internal static string UploadingTemplateFileVerbose {
            get {
                return ResourceManager.GetString("UploadingTemplateFileVerbose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of the expression or file must be constant..
        /// </summary>
        internal static string ValueNotConstant {
            get {
                return ResourceManager.GetString("ValueNotConstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of the expression or file &apos;{0}&apos; must be constant..
        /// </summary>
        internal static string ValueNotConstantInterpolated {
            get {
                return ResourceManager.GetString("ValueNotConstantInterpolated", resourceCulture);
            }
        }
    }
}
